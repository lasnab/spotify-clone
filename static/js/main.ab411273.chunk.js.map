{"version":3,"sources":["spotify.js","Login.js","DataLayer.js","Header.js","SongRow.js","Body.js","SidebarOption.js","Sidebar.js","Footer.js","Player.js","App.js","reducer.js","serviceWorker.js","index.js"],"names":["loginUrl","join","login","className","src","alt","href","DataLayerContext","createContext","DataLayer","initialState","reducer","children","Provider","value","useReducer","useDataLayerValue","useContext","Header","user","placeholder","type","Avatar","images","url","display_name","SongRow","track","album","name","artists","map","names","Body","spotify","discover_weekly","description","fontSize","tracks","items","item","SidebarOption","title","Icon","Sidebar","playlists","HomeIcon","SearchIcon","LibraryMusicIcon","playlist","Footer","Grid","container","spacing","xs","Slider","Player","SpotifyWebApi","App","token","dispatch","useEffect","hash","window","location","substring","split","reduce","initial","parts","decodeURIComponent","_token","access_token","setAccessToken","getMe","then","getUserPlaylists","getPlaylist","response","state","action","console","log","Boolean","hostname","match","ReactDOM","render","StrictMode","playling","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.ab411273.chunk.js","sourcesContent":["// https://developer.spotify.com/documentation/web-playback-sdk/quick-start/\n\n// Send authorization to Spotify\nexport const authEndpoint = \"https://accounts.spotify.com/authorize\";\n\n// Bring back to this app after authentication from Spotify\nconst redirectUri = \"http://localhost:3000/\";\n\nconst clientId = \"b7dd00e3617745978f6ce9e57935fa14\";\n// Set scope for this app\nconst scopes = [\n    \"user-read-currently-playing\",\n    \"user-read-recently-played\",\n    \"user-read-playback-state\",\n    \"user-top-read\",\n    \"user-modify-playback-state\",\n    \"playlist-read-private\",\n];\n\nexport const getTokenFromUrl = () => {\n    return window.location.hash\n    .substring(1)\n    .split('&')\n    .reduce((initial, item) => {\n        let parts = item.split('=');\n        initial[parts[0]] = decodeURIComponent(parts[1])\n        return initial;\n    }, {});\n}\n// Build the login url\nexport const loginUrl = `${authEndpoint}?client_id=${clientId}&redirect_uri=${redirectUri}&scope=${scopes.join(\"%20\")}&response_type=token&show_dialog=true`;\n","import React from 'react';\nimport './Login.css';\nimport { loginUrl } from './spotify'\n\nfunction login() {\n    return (\n        <div className='login'>\n            <img src=\"https://getheavy.com/wp-content/uploads/2019/12/spotify2019-830x350.jpg\" alt=\"spotify logo\"/>\n            <a href={loginUrl}>LOGIN WITH SPOTIFY</a>\n        </div>\n    )\n}\n\nexport default login\n ","import React, {createContext, useContext, useReducer} from \"react\";\n\nexport const DataLayerContext = createContext();\n\nexport const DataLayer = ({ initialState, reducer, children }) => (\n    <DataLayerContext.Provider value={useReducer(reducer, initialState)}> \n        {children}\n    </DataLayerContext.Provider> \n);\n\nexport const useDataLayerValue = () => useContext(DataLayerContext);\n","import React from 'react'\nimport './Header.css'\nimport SearchIcon from '@material-ui/icons/Search'\nimport { Avatar } from '@material-ui/core';\nimport { useDataLayerValue } from './DataLayer'\n\nfunction Header() {\n    const [{ user }, dispatch] = useDataLayerValue();\n    return (\n        <div className='header'>\n            <div className='header__left'>\n                <SearchIcon />\n                <input\n                    placeholder='Search for Artists, Songs '\n                    type='text'\n                />\n\n            </div>\n            <div className='header__right'>\n                <Avatar src={user?.images[0]?.url} alt='UA' />\n                <h4>{user?.display_name}</h4>\n            </div>\n            \n        </div>\n    )\n}\n\nexport default Header\n","import React from 'react'\nimport './SongRow.css'\n\nfunction SongRow( {track='test' }) {\n    return (\n        <div className='songRow'>\n            <img className='songRow__album' src={track.album.images[0].url} alt='track-allbum-img' />\n            <div className='songRow__info'>\n                <h1>{track.name}</h1>\n                <p>\n                    {track.artists.map((artists) => artists.names).join(', ') } - {' '}\n                    {track.album.name}\n                </p>\n            </div>\n            \n        </div>\n    )\n}\n\nexport default SongRow\n","import React from 'react'\nimport './Body.css'\nimport { useDataLayerValue } from './DataLayer'\nimport Header from './Header'\nimport PlayCircleFilledIcon from '@material-ui/icons/PlayCircleFilled';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\nimport SongRow from './SongRow'\n\n\nfunction Body({ spotify }) {\n    const [{discover_weekly}, dispatch] = useDataLayerValue();\n    return (\n        <div className='body'>\n            <Header spotify={spotify}/>\n\n            <div className='body__info'>\n                <img src={discover_weekly?.images[0].url} alt='Playlist IMG' />\n                <div className='body__infoText'>\n                    <strong>PLAYLIST</strong>\n                    <h2>Discover Weekly</h2>\n                    <p>{discover_weekly?.description}</p>\n                </div>\n            </div>\n            <div className='body__songs'>\n                <div className='body__icons'>\n                    <PlayCircleFilledIcon className='body__shuffle' />\n                    <FavoriteIcon fontSize='large'/>\n                    <MoreHorizIcon />\n                </div>\n                {discover_weekly?.tracks.items.map(item =>\n                    <SongRow track={item.track} />\n                    )}\n            </div>\n        </div>\n    )\n}\n\nexport default Body\n","import React from 'react'\nimport './SidebarOption.css'\n\nfunction SidebarOption({ title, Icon }) {\n    return (\n        <div className='sidebarOption'>\n            {Icon && <Icon className='sidebarOption__icon' />}\n            {Icon ? <h4>{title}</h4> : <p>{title}</p>}           \n        </div>\n    )\n}\n\nexport default SidebarOption\n","import React from 'react'\nimport './Sidebar.css'\nimport SidebarOption from './SidebarOption'\nimport HomeIcon from '@material-ui/icons/Home';\nimport SearchIcon from '@material-ui/icons/Search';\nimport LibraryMusicIcon from '@material-ui/icons/LibraryMusic';\nimport { useDataLayerValue } from './DataLayer';\n\nfunction Sidebar() {\n    const [{ playlists }, dispatch] = useDataLayerValue();\n    return (\n        <div className='sidebar'>\n            <img className='sidebar__logo' src='https://getheavy.com/wp-content/uploads/2019/12/spotify2019-830x350.jpg' alt='spotify-image'/>\n\n            <SidebarOption Icon={HomeIcon} title=\"Home\" />\n            <SidebarOption Icon={SearchIcon} title=\"Search\" />\n            <SidebarOption Icon={LibraryMusicIcon} title=\"Your Library\" />\n\n            <br />\n            <strong className=\"sidebar__title\">PLAYLISTS</strong>\n            <hr />\n\n            {playlists?.items?.map((playlist) => ( <SidebarOption title={playlist.name} /> ))}\n        \n        \n        \n        </div>\n    )\n}\n\nexport default Sidebar\n","import React from 'react'\nimport './Footer.css'\nimport PlayCircleOutlineIcon from '@material-ui/icons/PlayCircleOutline';\nimport SkipPreviousIcon from '@material-ui/icons/SkipPrevious';\nimport SkipNextIcon from '@material-ui/icons/SkipNext';\nimport ShuffleIcon from '@material-ui/icons/Shuffle';\nimport RepeatIcon from '@material-ui/icons/Repeat';\nimport PlaylistPlayIcon from '@material-ui/icons/PlaylistPlay';\nimport VolumeDownIcon from '@material-ui/icons/VolumeDown';\nimport { Grid, Slider } from '@material-ui/core';\n\nfunction Footer() {\n    return (\n        <div className='footer'>\n            <div className='footer__left'>\n                <img className='footer__albumLogo' src='https://upload.wikimedia.org/wikipedia/en/2/2e/Usher-yeah.jpg' alt=''/>\n                <div className='footer__songInfo'>\n                    <h4>Yeah!</h4>\n                    <p>Usher</p>\n                </div>\n            </div>\n            <div className='footer__center'>\n                <ShuffleIcon className='footer__green' />\n                <SkipPreviousIcon className='footer__icon' />\n                <PlayCircleOutlineIcon fontSize ='large' className='footer__icon' />\n                <SkipNextIcon className='footer__icon' />\n                <RepeatIcon className='footer__green' />\n            </div>\n            <div className='footer__right'>\n                <Grid container spacing={2}>\n                    <Grid item>\n                        <PlaylistPlayIcon />\n                    </Grid>\n                    <Grid item>\n                        <VolumeDownIcon />\n                    </Grid>\n                    <Grid item xs>\n                        <Slider />\n                    </Grid>\n                </Grid>\n            </div>\n            \n        </div>\n    )\n}\n\nexport default Footer\n","import React from 'react'\nimport Body from './Body'\nimport './Player.css'\nimport Sidebar from './Sidebar'\nimport Footer from './Footer'\n\nfunction Player({ spotify }) {\n    return (\n        <div className=\"player\">\n            <div className=\"player__body\">\n                <Sidebar/>\n                <Body spotify={spotify} />\n            </div>\n            <Footer />\n        </div>\n    );\n}\n\nexport default Player;\n","import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport Login from \"./Login\";\nimport { getTokenFromUrl } from './spotify';\nimport SpotifyWebApi from \"spotify-web-api-js\"\nimport Player from \"./Player\"\nimport { useDataLayerValue } from \"./DataLayer\"\n\nconst spotify = new SpotifyWebApi();\n\nfunction App() {\n  const [{ user, token}, dispatch] = useDataLayerValue();\n\n  useEffect(() => {\n    const hash = getTokenFromUrl();\n    // Change the url to blank, to hide access taken\n    window.location.hash = \"\";\n    const _token = hash.access_token;\n    // console.log('Token>>> ', token);\n\n    if (_token) {\n      dispatch({\n        type: \"SET_TOKEN\",\n        token: _token,\n      });\n      spotify.setAccessToken(_token);\n      spotify.getMe().then(user => {\n        dispatch({\n          type: 'SET_USER',\n          // just user will also work\n          user: user,\n        });\n      });\n      spotify.getUserPlaylists().then(playlists => {\n        dispatch({\n          type: 'SET_PLAYLISTS',\n          playlists: playlists,\n        });\n      });\n\n      spotify.getPlaylist('7pWkFvNsDyvN18mlYTC20n').then(response =>\n        dispatch({\n          type: 'SET_DISCOVER_WEEKLY',\n          discover_weekly: response,\n        })\n        );\n\n    }\n\n  }, [])\n\n  // console.log(\"User: \", user);\n  // console.log(\"Token: \", token);\n  // console.log(\"Playlists: \", playlists);\n  return (<div className=\"app\"> {token ? (<Player spotify={spotify} />) : (<Login />)}</div>);\n}\n\nexport default App;\n","export const initialState = {\n    user: null,\n    playlists: [],\n    playling: false,\n    item: null\n}\n\nconst reducer = (state, action) => {\n    console.log(action);\n\n    switch (action.type) {\n        case 'SET_USER':\n            return {\n                ...state, \n                user: action.user\n            };\n        case 'SET_TOKEN':\n            return {\n                ...state,\n                token: action.token\n            };\n        case 'SET_PLAYLISTS':\n            return {\n                ...state,\n                playlists: action.playlists\n            };\n        case 'SET_DISCOVER_WEEKLY':\n            return {\n                ...state,\n                discover_weekly: action.discover_weekly,\n            };\n        default:\n            return state;\n\n    }\n}\n\nexport default reducer;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { DataLayer} from \"./DataLayer\";\nimport reducer, { initialState } from \"./reducer\";\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <DataLayer initialState={initialState} reducer={reducer}>\n      <App />\n    </DataLayer>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}